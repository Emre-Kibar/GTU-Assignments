Directory,Root,Root,Jan 09 16:59,46062 byte
Directory,Documents,Root/Documents,Jan 09 16:59,26130 byte
Directory,CSE241Notes,Root/Documents/CSE241Notes,Jan 09 17:00,12109 byte
RegularFile,CppNotes.txt,Root/Documents/CSE241Notes/CppNotes.txt,Jan 09 17:06,4864 byte,->TYPECASTING~doubleVar = static_cast<double>intVar1 / intVar2;~~->DYNAMIC MEMORY ALLOCATION~new~delete~delete[]~~->FILE HANDLING~#include<fstream>~~fstream newfile;~newfile.open(abc.txt, ,ios::in | ios::out | ios:: app);~~ifstream inputfile;~inputfile.open(abc.txt);~~inputfile.is_open~~->CALL BY REFERENCE~void getnumbers(int& num1, int& num2); ~~void sendConstRef(const int &par1, const int &par2); These arguments sends real variables and make no changes on it ,only read.~void func(int& num);  To this function you cannot send a constant such a 2 because they are not stored in memory.~~->OVERLOADING~Function "signature".Function name & parameter list.Must be "unique" for each function definition~For C,signature just includes name but for C++ signature includes name,number of arguments and type of arguments.~~Allows for "any" numeric type.Any "subordinate" data automatically promoted~int  double~float  double~char  double	*More on this later!~~->DEFAULT ARGUMENTS~Allows omitting some arguments ~Specified in function declaration/prototype~void showVolume(int length,int width = 1,int height = 1);~Last 2 arguments are defaulted~Possible calls:~showVolume(2, 4, 6); //All arguments supplied~showVolume(3, 5); //height defaulted to 1~showVolume(7); //width & height defaulted to 1~~--->ARRAY LOOP FOREACH~~int myNumbers[5] = {10, 20, 30, 40, 50};~for (int i : myNumbers) {~  cout << i << "\n";~}~~->Classes and Objects~~class youtubeChannel{~public:~	string channelname;~	string ownername;~	int subscribers;~	list<string> PublishedVideoTitles;~	~	youtubeChannel(string channelname, string ownername){~		channelname = channelname;~		ownername = ownername;~		subscribers = subscribers;~	}~~~	void getInfo(){~		cout << "Name: " << channelname << endl;~		cout << "OwnerName: " << ownername << endl;~		cout << "Subscribers Count: " << subscribers << endl;~		~		for(string videos : ytChannel.PublishedVideosTitles){~			cout << videos << endl;~		}~	}~~};~~~int main(){~~	youtubeChannel ytChannel1("CodeBeauty" , "Saldina");~	youtubeChannel.PublishedVideoTitles.push_back("some video");~	ytchannel1.getInfo();~}~~---You can use encapsulation for classes by using public and private~~class youtubeChannel{~private:~	string channelname;~	string ownername;~	int subscribers;~	list<string> PublishedVideoTitles;~public:	~	youtubeChannel(string channelname, string ownername){~		channelname = channelname;~		ownername = ownername;~		subscribers = 0;~	}~~~	void getInfo(){~		cout << "Name: " << channelname << endl;~		cout << "OwnerName: " << ownername << endl;~		cout << "Subscribers Count: " << subscribers << endl;~		~		for(string videos : ytChannel.PublishedVideosTitles){~			cout << videos << endl;~		}~	}~~	void subcribe(){~		subscribers++;	~	}~~	void PublishVideo(){~		PublishedVideoTitles.push_back("some video");~	}~~};~~--->INHERITANCE~~class youtubeChannel{~public:~	string channelname;~	string ownername;~	int subscribers;~	list<string> PublishedVideoTitles;~	~	youtubeChannel(string channelname, string ownername){~		channelname = channelname;~		ownername = ownername;~		subscribers = subscribers;~	}~~~	void getInfo(){~		cout << "Name: " << channelname << endl;~		cout << "OwnerName: " << ownername << endl;~		cout << "Subscribers Count: " << subscribers << endl;~		~		for(string videos : ytChannel.PublishedVideosTitles){~			cout << videos << endl;~		}~	}~~};~~class CookingYoutubeChannel : public YoutubeChannel{~~	CookingYoutubeChannel(string channelname , string ownername) : public YoutubeChannel(channelname, ownername){~	}~~	void Practice(){~		cout << "cookin,trying new ingridients"<< endl;~	}~~}~~~int main(){~	CookingYoutubeChannel ytchannel("Amy's Kitchen", "Amy");~	ytchannel.PublishVideo();~	ytchannel.Subscribe();~	ytchannel.getInfo();~	ytchannel.Practice();~~~}~~---->INLINE FUNCTIONS~The execution of some functions requires much more times than execuiton of them.Because of it,for short functions you can use inline keyword.~~#include <iostream>~using namespace std;~inline int cube(int s) { return s * s * s; }~int main()~{~    cout << "The cube of 3 is: " << cube(3) << "\n";~    return 0;~}  	~~For classes you dont need to use inline keyword for declaration because actually every function that defined within the class is a inline function.~~#include <iostream>~ ~using namespace std;~ ~class operation {~    int a, b, add, sub, mul;~    float div;~ ~public:~    void get();~    void sum();~    void difference();~    void product();~    void division();~};~inline void operation ::get()~{~    cout << "Enter first value:";~    cin >> a;~    cout << "Enter second value:";~    cin >> b;~}~ ~inline void operation ::sum()~{~    add = a + b;~    cout << "Addition of two numbers: " << a + b << "\n";~}~ ~~int main()~{~    cout << "Program using inline function\n";~    operation s;~    s.get();~    s.sum();~~    return 0;~}
RegularFile,deneme6.cpp,Root/Documents/CSE241Notes/deneme6.cpp,Jan 09 17:14,1960 byte,#include <iostream>~#include <vector>~using namespace std;~~class DayofYearSet{~	public:~		class DayofYear{~			public:~				DayofYear(int dValue=1, int mValue= 1, int yValue=1);			~~			private:~				int day;~				int month;~				int year;~			};~~		DayofYearSet(vector<DayofYear> a);~		const DayofYearSet& add(const DayofYear& other);~		const DayofYearSet& remove(const DayofYear& other);~		int size(){ return lenght; } ~		const DayofYearSet operator +(const DayofYear& other)const;~		const DayofYearSet operator -(const DayofYear& other)const;~		const DayofYearSet operator ^(const DayofYear& other)const;~		const DayofYearSet operator !()const;~		const DayofYearSet operator [](int index)const;~~	private:~		DayofYear* ptr;~		int lenght;~};~~~DayofYearSet::DayofYearSet(vector<DayofYear> a){~~~~~}~const DayofYearSet& DayofYearSet:: add(const DayofYear& other){}~const DayofYearSet& DayofYearSet:: remove(const DayofYear& other){}~const DayofYearSet DayofYearSet:: operator +(const DayofYear& other)const{}~const DayofYearSet DayofYearSet::operator -(const DayofYear& other)const{}~const DayofYearSet DayofYearSet::operator ^(const DayofYear& other)const{}~const DayofYearSet DayofYearSet::operator !()const{}~const DayofYearSet DayofYearSet::operator [](int index)const{}~~~int main(){~	~	vector<DayofYearSet :: DayofYear> a = { DayofYearSet :: DayofYear(15,5,2003), DayofYearSet :: DayofYear(30,6,1976)};~	vector<DayofYearSet :: DayofYear> b = { DayofYearSet :: DayofYear(15,5,2003), DayofYearSet :: DayofYear(4,1,2006)};~ ~~~~	// vector<int> myv;~~	// for(int i = 0; i < 10;++i)~	// 	myv.push_back(i);~	~	// for(int j : myv)~	// 	cout << j << " " ;~	// cout<< endl;~~	// cout<< myv.capacity()<< endl;~	// cout<< myv.size()<< endl;~~	// for(int i = 10; i < 17;++i)~	// 	myv.push_back(i);~~	// for(int j : myv)~	// 	cout << j << " " ;~	// cout<< endl;~~	// cout<< myv.capacity()<< endl;~	// cout<< myv.size()<<endl;~	// cout << myv.back() << endl;~	return 0;~}~~
RegularFile,deneme1.java,Root/Documents/CSE241Notes/deneme1.java,Jan 09 17:17,5285 byte,import java.util.Scanner;~import java.util.Arrays;~import java.util.ArrayList;~import java.util.Comparator;~import java.util.HashMap;~import java.util.Map;~import java.time.LocalDate;~~class deneme1{~    public static void main(String[] args){~~//String literals and objects~/*         String literalString1 = "abc";~        String literalString2 = "abc";~~        String objecString1 = new String("xyz");~        String objecString2 = new String("xyz");~    ~        System.out.println(literalString1 == literalString2);~        System.out.println(objecString1  == objecString2); */~~//String format~/*         String name = "Emre Kibar";~        String country = "Türkiye";~        int age = 20;~        String university = "Gebze Technical University";~        double Gpa = 3.60;~~        String formattedString = String.format("My name is %s.I am from %s.I am %d years old.I am a Student at %s. My Gpa is %.2f.", name, country, age, university, Gpa);~~~        System.out.println(formattedString); */~/*         String string1 = new String("abc");~        String string2 = new String("abc");~~        System.out.println(string1.equals(string2)); */~~//Taking input from user~/*         Scanner scanner = new Scanner(System.in);~        ~        System.out.print("What is your name? ");~        String name = scanner.nextLine();~~        System.out.printf("Hello %s. How old are you? ", name);~        int age = scanner.nextInt();~        scanner.nextLine();~~        System.out.printf("%d is an excellent age to start programming.", age);~ */~~//Arrays~/* ~        char vowels[] = {'e', 'u', 'a', 'o', 'i'};~        vowels[2] = 'x';~~        char key = 'o';~~        Arrays.sort(vowels);~        int foundItemIndex = Arrays.binarySearch(vowels, key);~~        System.out.println(Arrays.toString(vowels));~        System.out.println(vowels.length);~        System.out.println(foundItemIndex);~~        int numbers[] = {1, 2, 3, 4, 5};~        int copyofNumbers1[] = Arrays.copyOf(numbers, 10); //The content of base array is copied.~        int copyofNumbers2[] = numbers; //copy is referenced to base array.~~        Arrays.fill(numbers, 0);~~        System.out.println(Arrays.toString(numbers));~        System.out.println(Arrays.toString(copyofNumbers1));~        System.out.println(Arrays.toString(copyofNumbers2));  */~~//ArrayList~/*         ArrayList<Integer> numbers = new ArrayList<Integer>();~        //ArrayList<Integer> numbers = new ArrayList<>();  This is also valid.~~        numbers.add(5);~        numbers.add(3);~        numbers.add(1);~        numbers.add(4);~        numbers.add(2);~~        System.out.println(numbers.toString());~        numbers.sort(Comparator.naturalOrder());~        System.out.println(numbers.toString());~        numbers.sort(Comparator.reverseOrder());~        System.out.println(numbers.toString());~        System.out.println(numbers.size());~        ~        numbers.forEach(number -> {~                        System.out.println(number*2);} );~~        //System.out.println(numbers.contains(Integer.valueOf(5)));~        //numbers.set(2, Integer.valueof(30));~        //numbers.remove(Integer.valueOf(4));  */~~//HashMaps        ~        ~/*         // Creating a HashMap~        Map<String, Integer> studentGrades = new HashMap<>();~~        // Adding key-value pairs~        studentGrades.put("Alice", 90);~        studentGrades.put("Bob", 85);~        studentGrades.put("Charlie", 95);~~        // Accessing values~        int aliceGrade = studentGrades.get("Alice");~        System.out.println("Alice's Grade: " + aliceGrade);~        ~        // Iterating through the entries~        for (Map.Entry<String, Integer> entry : studentGrades.entrySet())~            System.out.println(entry.getKey() + ": " + entry.getValue());~        ~        studentGrades.replace("Bob", 40);~        //studentGrades.remove("Charlie");~        //System.out.println(studentGrades.containsKey("Bob"));~        //System.out.println(studentGrades.containsValue(85));~        ~        //studentGrades forEach((subject, score) -> {~        //        System.out.println(subject + "-" + score);~        //})~~        for (Map.Entry<String, Integer> entry : studentGrades.entrySet())~            System.out.println(entry.getKey() + ": " + entry.getValue());~        ~        System.out.println(studentGrades.get("Max"));~        System.out.println(studentGrades.getOrDefault("Max", -1));~~/* ~        Map<String, String> map = new HashMap<>();~~        // Using putIfAbsent to add key-value pairs~        String oldValue = map.putIfAbsent("key1", "value1");~        System.out.println("Old Value for key1: " + oldValue);  // null~~        oldValue = map.putIfAbsent("key1", "new_value");~        System.out.println("Old Value for key1 after second putIfAbsent: " + oldValue);  // value1~~        // The map now contains the key-value pair ("key1", "value1")~        System.out.println("Value for key1: " + map.get("key1"));  // value1~~ ~*/~~//OOP~        user youngerUser = new user();~~        youngerUser.name = "Emre Kibar";~        youngerUser.birthday = LocalDate.parse("2003-05-15");~~        System.out.printf("%s was born back %s and he is now %d years old.", youngerUser.name , youngerUser.birthday.toString(), youngerUser.age());~~~~~~    }~~}
Directory,CSE102Notes,Root/Documents/CSE102Notes,Jan 09 17:00,14021 byte
RegularFile,CNotes.txt,Root/Documents/CSE102Notes/CNotes.txt,Jan 09 17:05,14021 byte,---Hello World~Look left top corner.You will see file part.Then, do new>project>console application.You entered basic coding material.Find main.ccp and see basic Hello world command.you can execute the code by click the~run button on the top of the screen.~~#include <stdio.h>~#include <stdlib.h>~~int main()~{~    printf ("Hello world!\n");~~    return 0;~}~~---Drawing a Shape~main() is just a function,method.Between the paranthesises is your instructions,your recipe to cook which you want to execute from the computer.Then,semicolon which at the end of your insctruction is very important~cause it means your instruction is over.Then,\n means after your instruction you create a new line.The numbers at the left side of the lines means order of the instructions.~~---Variables~Variables contains datas like single-multiple characters,integer-decimal numbers;with them you can manage your code easily.For character,you can use------ char characterName[] = "Michael";-------------- ~(btw we call this one as string)this one and you have to change the character name in your code like %s and after paranthesis u have to refer your variables name.For example-----printf("There once was a man named %s.\n", characterName);------~For integer numbers you have to use -----int characterAge = 24;------- and again instead of character age u have to use a variable but this one is different like %d.Also you can change your variables within a code.~~#include <stdio.h>~#include <stdlib.h>~~int main()~{~~    char characterName[] = "Michael";~    int characterAge = 24;~    printf ("There once was a man named %s.\n", characterName);~    printf ("he was %d years old.\n", characterAge);~    characterAge = 42;~    printf ("He really liked the name %s\n", characterName);~    printf ("but did not like being %d.\n", characterAge);~~    return 0;~}~~------Data Types~~    int age = 40;                                                for integer numbers       %d~    double gpa = 3.6;                                        for decimal numbers      %f~    char grade = 'A'                                           for single characters      %c  -----tek t rna a dikkat et-----~    char phrase[] = "Giraffe Academy"               for multiple characters    %s~~-----Printf~printf("Hello World!");~printf("Hello World!\n");~printf("Hello\nWorld!");~printf("Hello\"World!");~~printf("%d",500);  for integer numbers you have to use %d format and then you should add after quatation marks your number with comma.~printf("My favorite %s is %d","number",500);  for characters u use %s~printf("My favorite %s is %f","number",500.322342);  for decimal number u have to use %f format~~    int favNum = 90;~    char myChar ='i';~    printf("My favorite %c is %d",myChar,favNum);    for single ~~-----Working with Numbers~printf("%f", 1.25 + 0.75 );~    printf("%d", 5 / 4 );   this one gives us 1~    printf("%f", 5 / 4 );    this code isn't right~    printf("%f", 5 / 4.0 );  this gives us exact answer,1.25~~printf("%f", pow(2, 3));        pow makes 2^3~printf("%f", sqrt(36));           sqrt makes answer equal to 6~printf("%f", ceil(42.23));       ceil makes decimal number to higher first integer number~printf("%f", floor(42.23));     floor makes decimal number to lower first integer number~ ~Note:You can look for other C math functions on Google.~~-----Comments~Between /*   */  things will be ignored~~#include <stdio.h>~#include <stdlib.h>~~int main()~{~    /*~    printf("asdaaw");~    */~~    printf("Comments are fun");~    return 0;~}~~------Constants~We use const format before unchangable codes.For example,belowed code will give error at num=8 line cause it is a constant. ~int main()~{~    const int FAV_NUM = 5;~    printf("%d\n",FAV_NUM);~    num=8;~    printf("%d",FAV_NUM);~    return 0;~}~~------Getting User Input~We use scanf command to access the information and we dont give any information to variables.~{~    int age;~    printf("Enter your age: ");~    scanf("%d",&age);~    printf("You are %d years old", age);~    return 0;~}~~While scaning decimal number,we use %lf with scanf command.~int main()~{~    double gpa;~    printf("Enter your gpa: ");~    scanf("%lf",&gpa);~    printf("Your gpa is %f", gpa);~    return 0;~}~~Scanf command only takes the first part of your name if you use space.You can add a limit within a square paranthesis.With single characters,use %c~int main()~{~    char name[20];~    printf("Enter your name: ");~    scanf("%s",&name);~    printf("Your name is %s", name);~    return 0;~}~~Fgets command takes whole line,after comma give the character limit for line,then stdin DonoWall.~int main()~{~    char name[20];~    printf("Enter your name: ");~    fgets(name, 20,stdin);~    printf("Your name is %s", name);~    return 0;~}~~------Building A Basic Calculator~Belowed code doesnt work for decimal numbers.~{~    int num1;~    int num2;~    printf("Enter first number:");~    scanf("%d",&num1);~    printf("Enter second number:");~    scanf("%d",&num2);~    printf("Answer= %d",num1+num2);~    return 0;~}~~But this code work for both integer and decimal numbers.~{~    double num1;~    double num2;~    printf("Enter first number:");~    scanf("%lf",&num1);~    printf("Enter second number:");~    scanf("%lf",&num2);~    printf("Answer= %f",num1+num2);~    return 0;~}~~------Building Mad Libs Game~You have to use 2 command for take celebrity's first and second name.~~int main()~{~    char color[15];~    char pluralNoun[20];~    char celebrityFN[20];~    char celebritySN[20];~~    printf("enter a color:");~    scanf("%s",&color);~    printf("enter a plural noun:");~    scanf("%s",&pluralNoun);~    printf("enter a color:");~    scanf("%s %s",&celebrityFN,celebritySN);~~    printf("Roses are %s\n", color);~    printf("%s are blue\n",pluralNoun);~    printf("I love %s %s\n",celebrityFN,celebritySN);~}~~------Arrays~With arrays,you can contain a lot of information at the same time though you can contain only one information with variables.Btw in code elements start with 0 not 1.~int main()~{~    int luckyNumbers[] = {4, 8, 14, 22, 43};~    luckyNumbers[1]=15;~    printf("%d",luckyNumbers[1]);~~    return 0;~}~~Within the square paranthesis you can limit the number of information and then you can dedicate the elements.~{~    int luckyNumbers[10];~    luckyNumbers[1]=15;~    luckyNumbers[0]=20;~    printf("%d%d",luckyNumbers[1],luckyNumbers[0]);~~    return 0;~}~~~Also,this is an array of single characters--------char phrase[20]="Giraffe Academy";------------~~------Functions~int main()~{~    sayHi();~~}~~void sayHi(char name[],int age)~{~    printf("Hello User\n");~}~~int main() or void sayHi(char name[],int age) are functions.Function executes the codes in theirselves.------sayHi(char name[],int age)------between the paranthesis,you give parameters the function.~~int main()~{~    sayHi("Tom",23);~    sayHi("Mike",35);~    sayHi("Oscar",42);~}~~void sayHi(char name[],int age)~{~    printf("Hello %s,you are %d\n",name,age);~}~~-------Return Statement~~double cube(double num)~{~    double result = num*num*num;~    return result;~}~int main()~{~    printf("Answer:%f", cube(3.0));~}~~We begin with double function cause we need the parameters firstly.If you begin with main function code will give error.So,you must prototype the double code with semicolon above the main code.~~double cube(double num);~int main()~{~~    printf("Answer:%f", cube(3.0));~}~~double cube(double num)~{~    double result = num*num*num;~    return result;~}~~---------If Statements~See if and else.~   int max(int num1,int num2){~   int result;~   if(num1>num2){ ~        result=num1;~   } else {~            result=num2;~   }~   return result;~}~   int main()~{~   printf("%d", max(4,10));~}~~Watch out for else if command and && ~   int max(int num1,int num2,int num3){~   int result;~   if(num1>=num2 && num1>=num3){~        result=num1;~   } else if(num2>=num1 && num2>=num3){~            result=num2;~   } else {~        result = num3;}~   return result;~}~   int main()~{~   printf("%d", max(1,2,3));~}~~|| means or.So,one of them is right,thats okay.> b y kt r.< k   kt r.<= k   k e it,>= b y k e it,== e it,!=e it de il.if(!(3<2)) is a right command cause ! negates the thing.~  int main()~{~   if(3>2 || 3>5){~    printf("True");~   }else{~    printf("False");}~}~~------Building A Better Calculator~Watch out for tek t rnak between the operators.~int main()~{~    double num1;~    double num2;~    char op;~    printf("Enter a number ");~    scanf("%lf",&num1);~    printf("Enter a Operator ");~    scanf(" %c",&op);~    printf("Enter a number ");~    scanf("%lf",&num2);~~    if(op == '+'){~        printf("%f", num1 + num2);~    }else if(op == '-'){~        printf("%f", num1 - num2);~    }else if(op == '/'){~        printf("%f", num1 / num2);~    }else if(op == '*'){~        printf("%f", num1 * num2);~    }else{~    printf("Invalid operator");~    }~~}~~-------Switch Statements~Switch statement is the easy way of if statement.case---in case~~int main()~{~    char grade = 'A';~~    switch(grade) {~    case 'A':~            printf("You did great");~            break;~    case 'B':~            printf("You did great");~            break;~    case 'C':~            printf("You did great");~            break;~    case 'D':~            printf("You did great");~            break;~    case 'F':~            printf("You did great");~            break;~    default:~        printf("Invalid Grade");~~    }~}~~---------Structs~In structs,you can contain multiple kind of information like integer,decimal number or characters.Btw,watch out for the strcpy command,you have to use it for multiple character arrays.~~struct Student{~     char name[50];~     char major[50];~     int age;~     double gpa;~~};~~~int main()~{~    struct Student student1;~    student1.age=22;~    student1.gpa=3.6;~    strcpy(student1.name,"Jim");~    strcpy(student1.major,"Art");~~    struct Student student2;~    student2.age=30;~    student2.gpa=2.9;~    strcpy(student2.name,"Tom");~    strcpy(student2.major,"Computer Sciences");~~~    printf("%d", student2.age);~~~}~~---------While Loops~While command create a code which depen on a situation.If this situation is true,while code execute.If you delete the sitution,you make a infinite loop.Also index++ mean index=index+1~int main()~{~    int index=1;~    while(index<=5){~        printf("%d\n",index);~        index++;~}~~}~~In do-while loop,firstly execute the code without checking the situtation.In the next phase,checks the situtation.~int main()~{~    int index=6;~    do{~        printf("%d\n",index);~        index++;~}while(index<=5);~~}~~----------Building A Guessing Game~Think outofGuesses like boolean values as 0 and 1.~int main()~{~    int secretNumber = 5;~    int guess;~    int guessCount=0;~    int guessLimit=3;~    int outofGuesses=0;~~    while (guess!=secretNumber && outofGuesses==0){~    if(guessCount<guessLimit){~    printf("Enter a number:  ");~    scanf("%d",&guess);~    guessCount++;~    }else{outofGuesses=1;~    }~    }~~    if(outofGuesses==1){~    printf("Out of Guesses");~    }else{printf("You won!");~    }~~}~~----------For Loop~~int main()~{~    int luckynumbers[]={4 ,8,15,33,38,42};~    int i;~    for(i = 0 ; i < 4 ; i++){~~      printf("%d\n",luckynumbers[i]);~~    }~~}~~--------2 Dimensional Arrays and Nested Loops~2Dimensional Loops.Remember first number is 0 in computer.~int main()~{~    int nums[3] [2] = {~             {1, 2},~             {3, 4},~             {5, 6}~             };~~printf("%d",nums[0][0]);~return 0;~}~~Nested Loops~~int main()~{~    int nums[3] [2] = {~             {1, 2},~             {3, 4},~             {5, 6}~             };~    int i,j;~    for(i=0;i<3;i++){~    for (j=0;j<2;j++){~      printf("%d,",nums[i][j]);~}~      printf("\n");~    }~}~~----------Accessing Memory Addresses ~%p mean pointer.We use it when we want the where variables are in our physical memory.~int main()~{~    int age = 30;~    double gpa = 3.6;~    char grade = 'A';~~    printf("age:%p\ngpa:%p\ngrade:%p", &age, &gpa, &grade);~~}~~--------Pointers~Pointers are just another type of data like int which contains integer numbers or char which contains characters and pointers show us our variables',which we already use,memory adress.Look below to see~how we use the pointers.  ~int main()~{~    int age = 30;~    int * pAge = &age;~    double gpa = 3.6;~    double * pGpa = &gpa;~    char grade = 'A';~    char * pGrade = &grade;~    printf("age's memory address:%p", &age);~    return 0;~}~~--------Dereferencing Pointers~With *&age,we dereference the pointer and we get the variables' value not the memory address.Also we can dereference multiple times like *&*&*&age.~int main()~{~    int age = 30;~    int * pAge = &age;~~    printf("%d", *&age);~~}~~--------Writing Files~File is such another data type,and fopen means opening a file.Then between the paranthesis,firstly we give the name of the file,and then we write what we want to do like w for write,a for append,r for read.~Then,we use fprintf command to print on file.Finally,fclose command mean close the file.Also,you can use any kind of file instead of txt like html or css.~int main()~{~    FILE * fpointer = fopen("employees.txt","w");~~    fprintf(fpointer,"Jim,Salesman\nPam,Receptionist\nOscar,Accounting");~~    fclose(fpointer);~    return 0;~~}~While we append something on file,we use "a". ~int main()~{~    FILE * fpointer = fopen("employees.txt","a");~~    fprintf(fpointer,"\nKelly,Customer Services");~~    fclose(fpointer);~    return 0;~~}~~-------Reading Files~When we want to read a file,we use r abrevitation,and we create an variable int line.Then to get all line we use fgets command,and printf reads the line.The number of fgets,shows us the number of line.~~int main()~{~    int line[255];~    FILE * fpointer = fopen("employees.txt","r");~~    fgets(line, 255, fpointer);~    fgets(line, 255, fpointer);~    fgets(line, 255, fpointer);~    printf("%s",line);~    return 0;~~}~~
Directory,Reports,Root/Reports,Jan 09 16:59,3937 byte
Directory,2023Report,Root/Reports/2023Report,Jan 09 17:01,3454 byte
RegularFile,2023Programme.txt,Root/Reports/2023Report/2023Programme.txt,Jan 09 17:07,3454 byte,Introduction:~XYZ Corporation proudly presents its Annual Report for the fiscal year 2023, highlighting a year marked by resilience, strategic initiatives, and sustained growth. Despite facing unprecedented challenges in the global business landscape, our company has navigated through the complexities with agility and adaptability.~~Financial Overview:~The fiscal year 2023 proved to be financially robust for XYZ Corporation. Our total revenue increased by 15%, reaching a record-breaking $2.5 billion. This growth can be attributed to the successful launch of innovative products, strategic partnerships, and a focus on operational efficiency. Net profits saw a commendable rise of 20%, showcasing the effectiveness of our cost management strategies.~~Market Expansion and Global Reach:~In line with our commitment to expanding market presence, XYZ Corporation successfully entered new markets and strengthened its position in existing ones. Our global footprint now spans across five continents, with key partnerships and distribution channels established to ensure a seamless reach to customers worldwide. This expansion strategy has not only diversified our revenue streams but has also positioned us as a formidable player in the international market.~~Innovation and Product Development:~The past year witnessed a significant investment in research and development, resulting in the launch of several groundbreaking products. From cutting-edge technology solutions to sustainable and eco-friendly offerings, XYZ Corporation continues to lead the industry in innovation. These new products have not only captured market share but have also garnered positive feedback from customers and industry experts alike.~~Sustainability and Corporate Responsibility:~XYZ Corporation remains committed to its environmental, social, and governance (ESG) responsibilities. Throughout the fiscal year 2023, we made substantial progress in reducing our carbon footprint, implementing eco-friendly practices in our operations, and supporting local communities through various social initiatives. Our dedication to sustainability is not just a corporate responsibility but a fundamental aspect of our long-term strategy.~~Employee Engagement and Development:~Our employees are the driving force behind our success, and their well-being and professional growth are paramount. XYZ Corporation invested heavily in employee development programs, training initiatives, and wellness activities. As a result, employee satisfaction and engagement scores reached new heights, contributing to a positive and collaborative work culture.~~Outlook for the Future:~Looking ahead, XYZ Corporation is well-positioned for continued success. Our strategic focus on innovation, sustainability, and global expansion sets the stage for sustained growth in the years to come. We remain dedicated to delivering value to our shareholders, customers, and employees while actively contributing to the betterment of the communities in which we operate.~~In conclusion, the Annual Report for the fiscal year 2023 reflects a company that has not only weathered challenges but has emerged stronger and more resilient. XYZ Corporation remains committed to its core values and strategic objectives, positioning itself as a leader in the industry. We express our gratitude to our stakeholders for their continued trust and support as we embark on another year of exciting opportunities and growth.
RegularFile,report.txt,Root/Reports/report.txt,Jan 09 17:11,483 byte,Reduced Greenhouse Gas Emissions:~One of the primary advantages of renewable energy is its contribution to mitigating climate change by reducing greenhouse gas emissions. Unlike traditional fossil fuels, renewable sources such as solar, wind, and hydropower produce minimal or zero emissions during energy generation. The widespread adoption of renewable energy technologies plays a crucial role in lowering the carbon footprint and addressing the global challenge of climate change.
Directory,Personal,Root/Personal,Jan 09 17:02,12498 byte
RegularFile,novel.txt,Root/Personal/novel.txt,Jan 09 17:26,389 byte,Amelia Thornton, a young artist with an insatiable curiosity, found herself drawn to the enigmatic charm of Eldridge. She had recently inherited a small cottage at the edge of town, a quaint abode with ivy-covered walls and a garden that seemed to have a life of its own. As she settled into her new home, she couldn't shake the feeling that there was more to Eldridge than met the eye....
SoftLinkedFile,->CSE241Notes,Root/Personal/->CSE241Notes,Jan 09 17:32,12109 byte,Root/Documents/CSE241Notes
RegularFile,random.txt,Root/random.txt,Jan 09 17:20,43 byte,asdasd~asdas~asdasdsddddddddd~~asdasdsa~sda
SoftLinkedFile,->2023Programme.txt,Root/->2023Programme.txt,Jan 09 17:33,3454 byte,Root/Reports/2023Report/2023Programme.txt
